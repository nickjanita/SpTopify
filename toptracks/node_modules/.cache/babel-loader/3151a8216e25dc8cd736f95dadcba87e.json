{"ast":null,"code":"import _slicedToArray from\"C:/Users/Najan/Desktop/TopTracks/SpTopify/toptracks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import SpotifyPlayer from\"react-spotify-web-playback\";import{useState,useEffect}from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";export default function Player(_ref){var accessToken=_ref.accessToken,trackUri=_ref.trackUri;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),play=_useState2[0],setPlay=_useState2[1];useEffect(function(){return setPlay(true);},[trackUri]);if(!accessToken)return null;return/*#__PURE__*/_jsx(SpotifyPlayer,{token:accessToken,showSaveIcon:true,callback:function callback(state){if(!state.isPlaying)setPlay(false);},play:play,uris:trackUri?[trackUri]:[]});}","map":{"version":3,"sources":["C:/Users/Najan/Desktop/TopTracks/SpTopify/toptracks/src/components/Player.js"],"names":["React","SpotifyPlayer","useState","useEffect","Player","accessToken","trackUri","play","setPlay","state","isPlaying"],"mappings":"0KAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,aAAP,KAA0B,4BAA1B,CACA,OAASC,QAAT,CAAmBC,SAAnB,KAAoC,OAApC,C,2CACA,cAAe,SAASC,CAAAA,MAAT,MAA2C,IAAzBC,CAAAA,WAAyB,MAAzBA,WAAyB,CAAZC,QAAY,MAAZA,QAAY,CACxD,cAAwBJ,QAAQ,CAAC,KAAD,CAAhC,wCAAOK,IAAP,eAAaC,OAAb,eACAL,SAAS,CAAC,iBAAMK,CAAAA,OAAO,CAAC,IAAD,CAAb,EAAD,CAAsB,CAACF,QAAD,CAAtB,CAAT,CACA,GAAI,CAACD,WAAL,CAAkB,MAAO,KAAP,CAElB,mBACE,KAAC,aAAD,EACE,KAAK,CAAEA,WADT,CAEE,YAAY,KAFd,CAGE,QAAQ,CAAE,kBAACI,KAAD,CAAW,CACnB,GAAI,CAACA,KAAK,CAACC,SAAX,CAAsBF,OAAO,CAAC,KAAD,CAAP,CACvB,CALH,CAME,IAAI,CAAED,IANR,CAOE,IAAI,CAAED,QAAQ,CAAG,CAACA,QAAD,CAAH,CAAgB,EAPhC,EADF,CAWD","sourcesContent":["import React from \"react\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\nimport { useState, useEffect } from \"react\";\r\nexport default function Player({ accessToken, trackUri }) {\r\n  const [play, setPlay] = useState(false);\r\n  useEffect(() => setPlay(true), [trackUri]);\r\n  if (!accessToken) return null;\r\n\r\n  return (\r\n    <SpotifyPlayer\r\n      token={accessToken}\r\n      showSaveIcon\r\n      callback={(state) => {\r\n        if (!state.isPlaying) setPlay(false);\r\n      }}\r\n      play={play}\r\n      uris={trackUri ? [trackUri] : []}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}