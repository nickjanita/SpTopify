{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Najan\\\\Desktop\\\\TopTracks\\\\toptracks\\\\src\\\\components\\\\Dashboard.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport useAuth from \"./useAuth\";\nimport { useState, useEffect } from \"react\";\nimport { Container, Form } from \"react-bootstrap\";\nimport SpotifyWebApi from \"spotify-web-api-node\";\nimport TrackSearchResult from \"./TrackSearchResult\";\nimport ArtistSearchResult from \"./ArtistSearchResult\";\nimport Player from \"./Player\";\nimport AlbumQuery from \"./AlbumQuery\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst spotifyApi = new SpotifyWebApi({\n  client_id: \"9065c82d679c48b09c2df99999c34034\"\n});\nexport default function Dashboard({\n  code\n}) {\n  _s();\n\n  const accessToken = useAuth(code);\n  const [search, setSearch] = useState(\"\");\n  const [searchResults, setSearchResults] = useState([]);\n  const [albumResults, setAlbumResults] = useState([]);\n  const [trackResults, setTrackResults] = useState([]); // console.log(searchResults);\n  // console.log(albumResults);\n  // const [playingTrack, setPlayingTrack] = useState([]);\n  //console.log(searchResults);\n  // function chooseTrack(track) {\n  //   setPlayingTrack(track);\n  //   setSearch(\"\");\n  // }\n\n  function getAlbums(artistUri) {\n    setSearch(\"\");\n    spotifyApi.getArtistTopTracks(artistUri, \"US\", {\n      limit: 100\n    }).then(res => {\n      console.log(res); // setAlbumResults(\n      //   res.body.items.map((album) => {\n      //     //console.log(album);\n      //     var albumImage = \"\";\n      //     console.log(\"ping\");\n      //     try {\n      //       albumImage = album.images[0].url;\n      //     } catch (err) {\n      //       console.log(\"No image\");\n      //     }\n      //     spotifyApi.getAlbumTracks(album.id, { limit: 50 }).then(\n      //       function (data) {\n      //         console.log(data.body);\n      //       },\n      //       function (err) {\n      //         console.log(\"Something went wrong!\", err);\n      //       }\n      //     );\n      //     return {\n      //       name: album.name,\n      //       // title: track.name,\n      //       id: album.id,\n      //       albumUrl: albumImage,\n      //     };\n      //   })\n      // );\n    });\n  }\n\n  function getAllTracks(albumResults) {\n    console.log(albumResults);\n\n    for (let [key, value] of albumResults) {\n      console.log(key + \" = \" + value);\n    }\n  }\n\n  useEffect(() => {\n    if (!accessToken) return;\n    spotifyApi.setAccessToken(accessToken);\n  }, [accessToken]);\n  useEffect(() => {\n    if (!search) return setSearchResults([]);\n    if (!accessToken) return;\n    let cancel = false;\n\n    (async () => {\n      let res = await spotifyApi.searchArtists(search); //console.log(res.body);\n\n      setSearchResults(res.body.artists.items.map(artist => {\n        //console.log(artist);\n        // if (typeof artist.image != \"undefined\") {\n        //   var artistImage = artist.images[0].url;\n        //   console.log(artistImage);\n        // }\n        var artistImage = \"\";\n\n        try {\n          artistImage = artist.images[0].url;\n        } catch (err) {\n          console.log(\"No image\");\n        } //console.log(artist);\n\n\n        return {\n          name: artist.name,\n          // title: track.name,\n          id: artist.id,\n          artistUrl: artistImage\n        };\n      }));\n    })(); //return () => (cancel = true);\n\n  }, [search, accessToken]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    className: \"d-flex flex-column py-2\",\n    style: {\n      height: \"100vh\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      type: \"search\",\n      placeholder: \"Search Artists\",\n      value: search,\n      onChange: e => setSearch(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-grow-1 my-2\",\n      style: {\n        overflowY: \"auto\"\n      },\n      children: searchResults.map(artist => /*#__PURE__*/_jsxDEV(ArtistSearchResult, {\n        artist: artist,\n        getAlbums: getAlbums\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"Gdvfcc/3TVekscFmamrtno/OIsU=\", false, function () {\n  return [useAuth];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["C:/Users/Najan/Desktop/TopTracks/toptracks/src/components/Dashboard.js"],"names":["React","useAuth","useState","useEffect","Container","Form","SpotifyWebApi","TrackSearchResult","ArtistSearchResult","Player","AlbumQuery","spotifyApi","client_id","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","albumResults","setAlbumResults","trackResults","setTrackResults","getAlbums","artistUri","getArtistTopTracks","limit","then","res","console","log","getAllTracks","key","value","setAccessToken","cancel","searchArtists","body","artists","items","map","artist","artistImage","images","url","err","name","id","artistUrl","height","e","target","overflowY"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport ArtistSearchResult from \"./ArtistSearchResult\";\r\nimport Player from \"./Player\";\r\nimport AlbumQuery from \"./AlbumQuery\";\r\nconst spotifyApi = new SpotifyWebApi({\r\n  client_id: \"9065c82d679c48b09c2df99999c34034\",\r\n});\r\nexport default function Dashboard({ code }) {\r\n  const accessToken = useAuth(code);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [albumResults, setAlbumResults] = useState([]);\r\n  const [trackResults, setTrackResults] = useState([]);\r\n  // console.log(searchResults);\r\n  // console.log(albumResults);\r\n  // const [playingTrack, setPlayingTrack] = useState([]);\r\n  //console.log(searchResults);\r\n\r\n  // function chooseTrack(track) {\r\n  //   setPlayingTrack(track);\r\n  //   setSearch(\"\");\r\n  // }\r\n\r\n  function getAlbums(artistUri) {\r\n    setSearch(\"\");\r\n    spotifyApi\r\n      .getArtistTopTracks(artistUri, \"US\", { limit: 100 })\r\n      .then((res) => {\r\n        console.log(res);\r\n        // setAlbumResults(\r\n        //   res.body.items.map((album) => {\r\n        //     //console.log(album);\r\n        //     var albumImage = \"\";\r\n        //     console.log(\"ping\");\r\n        //     try {\r\n        //       albumImage = album.images[0].url;\r\n        //     } catch (err) {\r\n        //       console.log(\"No image\");\r\n        //     }\r\n        //     spotifyApi.getAlbumTracks(album.id, { limit: 50 }).then(\r\n        //       function (data) {\r\n        //         console.log(data.body);\r\n        //       },\r\n        //       function (err) {\r\n        //         console.log(\"Something went wrong!\", err);\r\n        //       }\r\n        //     );\r\n        //     return {\r\n        //       name: album.name,\r\n        //       // title: track.name,\r\n        //       id: album.id,\r\n        //       albumUrl: albumImage,\r\n        //     };\r\n        //   })\r\n        // );\r\n      });\r\n  }\r\n  function getAllTracks(albumResults) {\r\n    console.log(albumResults);\r\n    for (let [key, value] of albumResults) {\r\n      console.log(key + \" = \" + value);\r\n    }\r\n  }\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([]);\r\n    if (!accessToken) return;\r\n\r\n    let cancel = false;\r\n    (async () => {\r\n      let res = await spotifyApi.searchArtists(search);\r\n      //console.log(res.body);\r\n      setSearchResults(\r\n        res.body.artists.items.map((artist) => {\r\n          //console.log(artist);\r\n          // if (typeof artist.image != \"undefined\") {\r\n          //   var artistImage = artist.images[0].url;\r\n          //   console.log(artistImage);\r\n          // }\r\n          var artistImage = \"\";\r\n          try {\r\n            artistImage = artist.images[0].url;\r\n          } catch (err) {\r\n            console.log(\"No image\");\r\n          }\r\n          //console.log(artist);\r\n          return {\r\n            name: artist.name,\r\n            // title: track.name,\r\n            id: artist.id,\r\n            artistUrl: artistImage,\r\n          };\r\n        })\r\n      );\r\n    })();\r\n    //return () => (cancel = true);\r\n  }, [search, accessToken]);\r\n  return (\r\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\r\n      <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"Search Artists\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      ></Form.Control>\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map((artist) => (\r\n          <ArtistSearchResult artist={artist} getAlbums={getAlbums} />\r\n        ))}\r\n        {/* {albumResults.map((album) => (\r\n          <AlbumQuery album={album} />\r\n        ))} */}\r\n      </div>\r\n      <div>\r\n        {/* <Player accessToken={accessToken} trackUri={playingTrack?.uri}></Player> */}\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}