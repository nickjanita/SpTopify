{"ast":null,"code":"import _regeneratorRuntime from\"C:/Users/Najan/Desktop/TopTracks/SpTopify/toptracks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"C:/Users/Najan/Desktop/TopTracks/SpTopify/toptracks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"C:/Users/Najan/Desktop/TopTracks/SpTopify/toptracks/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React from\"react\";import useAuth from\"./useAuth\";import{useState,useEffect}from\"react\";import{Container,Form}from\"react-bootstrap\";import SpotifyWebApi from\"spotify-web-api-node\";import TrackSearchResult from\"./TrackSearchResult\";import ArtistSearchResult from\"./ArtistSearchResult\";import Player from\"./Player\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var spotifyApi=new SpotifyWebApi({client_id:\"9065c82d679c48b09c2df99999c34034\"});export default function Dashboard(_ref){var code=_ref.code;var accessToken=useAuth(code);var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),search=_useState2[0],setSearch=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),searchResults=_useState4[0],setSearchResults=_useState4[1];var _useState5=useState([]),_useState6=_slicedToArray(_useState5,2),albumResults=_useState6[0],setAlbumResults=_useState6[1];var _useState7=useState([]),_useState8=_slicedToArray(_useState7,2),trackResults=_useState8[0],setTrackResults=_useState8[1];// console.log(searchResults);\n// console.log(albumResults);\nvar _useState9=useState([]),_useState10=_slicedToArray(_useState9,2),playingTrack=_useState10[0],setPlayingTrack=_useState10[1];//console.log(searchResults);\nfunction chooseTrack(track){setPlayingTrack(track);setSearch(\"\");}function getArtistTracks(artistName){setSearch(\"\");spotifyApi.searchTracks(\"artist:\"+artistName,{limit:50}).then(function(res){setTrackResults(res.body.tracks.items.map(function(track){var trackImage=\"\";//console.log(track);\ntry{trackImage=track.album.images[2].url;}catch(err){console.log(err.message);}return{name:track.name,uri:track.uri,art:trackImage};}));});}useEffect(function(){if(!accessToken)return;spotifyApi.setAccessToken(accessToken);},[accessToken]);useEffect(function(){if(!search)return setSearchResults([]);if(!accessToken)return;var cancel=false;_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return spotifyApi.searchArtists(search);case 2:res=_context.sent;//console.log(res.body);\nsetSearchResults(res.body.artists.items.map(function(artist){//console.log(artist);\n// if (typeof artist.image != \"undefined\") {\n//   var artistImage = artist.images[0].url;\n//   console.log(artistImage);\n// }\nvar artistImage=\"\";try{artistImage=artist.images[0].url;}catch(err){console.log(\"No image\");}//console.log(artist);\nreturn{name:artist.name,// title: track.name,\nid:artist.id,artistUrl:artistImage};}));case 4:case\"end\":return _context.stop();}}},_callee);}))();//return () => (cancel = true);\n},[search,accessToken]);return/*#__PURE__*/_jsxs(Container,{className:\"d-flex flex-column py-2\",style:{height:\"100vh\"},children:[/*#__PURE__*/_jsx(Form.Control,{type:\"search\",placeholder:\"Search Artists\",value:search,onChange:function onChange(e){return setSearch(e.target.value);}}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex-grow-1 my-2\",style:{overflowY:\"auto\"},children:[searchResults.map(function(artist){return/*#__PURE__*/_jsx(ArtistSearchResult,{artist:artist,getArtistTracks:getArtistTracks});}),trackResults.map(function(track){return/*#__PURE__*/_jsx(TrackSearchResult,{track:track,chooseTrack:chooseTrack});})]}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(Player,{accessToken:accessToken,trackUri:playingTrack===null||playingTrack===void 0?void 0:playingTrack.uri})})]});}","map":{"version":3,"sources":["C:/Users/Najan/Desktop/TopTracks/SpTopify/toptracks/src/components/Dashboard.js"],"names":["React","useAuth","useState","useEffect","Container","Form","SpotifyWebApi","TrackSearchResult","ArtistSearchResult","Player","spotifyApi","client_id","Dashboard","code","accessToken","search","setSearch","searchResults","setSearchResults","albumResults","setAlbumResults","trackResults","setTrackResults","playingTrack","setPlayingTrack","chooseTrack","track","getArtistTracks","artistName","searchTracks","limit","then","res","body","tracks","items","map","trackImage","album","images","url","err","console","log","message","name","uri","art","setAccessToken","cancel","searchArtists","artists","artist","artistImage","id","artistUrl","height","e","target","value","overflowY"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport useAuth from \"./useAuth\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Container, Form } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-node\";\r\nimport TrackSearchResult from \"./TrackSearchResult\";\r\nimport ArtistSearchResult from \"./ArtistSearchResult\";\r\nimport Player from \"./Player\";\r\n\r\nconst spotifyApi = new SpotifyWebApi({\r\n  client_id: \"9065c82d679c48b09c2df99999c34034\",\r\n});\r\nexport default function Dashboard({ code }) {\r\n  const accessToken = useAuth(code);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [searchResults, setSearchResults] = useState([]);\r\n  const [albumResults, setAlbumResults] = useState([]);\r\n  const [trackResults, setTrackResults] = useState([]);\r\n  // console.log(searchResults);\r\n  // console.log(albumResults);\r\n  const [playingTrack, setPlayingTrack] = useState([]);\r\n  //console.log(searchResults);\r\n\r\n  function chooseTrack(track) {\r\n    setPlayingTrack(track);\r\n    setSearch(\"\");\r\n  }\r\n\r\n  function getArtistTracks(artistName) {\r\n    setSearch(\"\");\r\n    spotifyApi\r\n      .searchTracks(\"artist:\" + artistName, { limit: 50 })\r\n      .then((res) => {\r\n        setTrackResults(\r\n          res.body.tracks.items.map((track) => {\r\n            var trackImage = \"\";\r\n            //console.log(track);\r\n            try {\r\n              trackImage = track.album.images[2].url;\r\n            } catch (err) {\r\n              console.log(err.message);\r\n            }\r\n            return {\r\n              name: track.name,\r\n              uri: track.uri,\r\n              art: trackImage,\r\n            };\r\n          })\r\n        );\r\n      });\r\n  }\r\n  useEffect(() => {\r\n    if (!accessToken) return;\r\n    spotifyApi.setAccessToken(accessToken);\r\n  }, [accessToken]);\r\n\r\n  useEffect(() => {\r\n    if (!search) return setSearchResults([]);\r\n    if (!accessToken) return;\r\n\r\n    let cancel = false;\r\n    (async () => {\r\n      let res = await spotifyApi.searchArtists(search);\r\n      //console.log(res.body);\r\n      setSearchResults(\r\n        res.body.artists.items.map((artist) => {\r\n          //console.log(artist);\r\n          // if (typeof artist.image != \"undefined\") {\r\n          //   var artistImage = artist.images[0].url;\r\n          //   console.log(artistImage);\r\n          // }\r\n          var artistImage = \"\";\r\n          try {\r\n            artistImage = artist.images[0].url;\r\n          } catch (err) {\r\n            console.log(\"No image\");\r\n          }\r\n          //console.log(artist);\r\n          return {\r\n            name: artist.name,\r\n            // title: track.name,\r\n            id: artist.id,\r\n            artistUrl: artistImage,\r\n          };\r\n        })\r\n      );\r\n    })();\r\n    //return () => (cancel = true);\r\n  }, [search, accessToken]);\r\n  return (\r\n    <Container className=\"d-flex flex-column py-2\" style={{ height: \"100vh\" }}>\r\n      <Form.Control\r\n        type=\"search\"\r\n        placeholder=\"Search Artists\"\r\n        value={search}\r\n        onChange={(e) => setSearch(e.target.value)}\r\n      ></Form.Control>\r\n      <div className=\"flex-grow-1 my-2\" style={{ overflowY: \"auto\" }}>\r\n        {searchResults.map((artist) => (\r\n          <ArtistSearchResult\r\n            artist={artist}\r\n            getArtistTracks={getArtistTracks}\r\n          />\r\n        ))}\r\n        {trackResults.map((track) => (\r\n          <TrackSearchResult track={track} chooseTrack={chooseTrack} />\r\n        ))}\r\n      </div>\r\n      <div>\r\n        <Player accessToken={accessToken} trackUri={playingTrack?.uri}></Player>\r\n      </div>\r\n    </Container>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}