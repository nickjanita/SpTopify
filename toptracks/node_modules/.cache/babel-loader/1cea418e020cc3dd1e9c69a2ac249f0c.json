{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Najan\\\\Desktop\\\\TopTracks\\\\SpTopify\\\\toptracks\\\\src\\\\components\\\\Player.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport SpotifyPlayer from \"react-spotify-web-playback\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Player({\n  accessToken,\n  trackUri\n}) {\n  _s();\n\n  const [play, setPlay] = useState(false);\n  useEffect(() => setPlay(true), [trackUri]);\n  if (!accessToken) return null;\n  return /*#__PURE__*/_jsxDEV(SpotifyPlayer, {\n    token: accessToken,\n    showSaveIcon: true,\n    callback: state => {\n      if (!state.isPlaying) setPlay(false);\n    },\n    play: play,\n    uris: trackUri ? [trackUri] : [],\n    styles: {\n      loaderSize: 10,\n      sliderHeight: 3,\n      sliderColor: \"#1cb954\",\n      trackArtistColor: \"#ccc\",\n      trackNameColor: \"#fff\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Player, \"jVhLcXDeOrLi5A95zDr62ndrz9E=\");\n\n_c = Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["C:/Users/Najan/Desktop/TopTracks/SpTopify/toptracks/src/components/Player.js"],"names":["React","SpotifyPlayer","useState","useEffect","Player","accessToken","trackUri","play","setPlay","state","isPlaying","loaderSize","sliderHeight","sliderColor","trackArtistColor","trackNameColor"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,4BAA1B;AACA,SAASC,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;;AACA,eAAe,SAASC,MAAT,CAAgB;AAAEC,EAAAA,WAAF;AAAeC,EAAAA;AAAf,CAAhB,EAA2C;AAAA;;AACxD,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,KAAD,CAAhC;AACAC,EAAAA,SAAS,CAAC,MAAMK,OAAO,CAAC,IAAD,CAAd,EAAsB,CAACF,QAAD,CAAtB,CAAT;AACA,MAAI,CAACD,WAAL,EAAkB,OAAO,IAAP;AAElB,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEA,WADT;AAEE,IAAA,YAAY,MAFd;AAGE,IAAA,QAAQ,EAAGI,KAAD,IAAW;AACnB,UAAI,CAACA,KAAK,CAACC,SAAX,EAAsBF,OAAO,CAAC,KAAD,CAAP;AACvB,KALH;AAME,IAAA,IAAI,EAAED,IANR;AAOE,IAAA,IAAI,EAAED,QAAQ,GAAG,CAACA,QAAD,CAAH,GAAgB,EAPhC;AAQE,IAAA,MAAM,EAAE;AACNK,MAAAA,UAAU,EAAE,EADN;AAENC,MAAAA,YAAY,EAAE,CAFR;AAGNC,MAAAA,WAAW,EAAE,SAHP;AAINC,MAAAA,gBAAgB,EAAE,MAJZ;AAKNC,MAAAA,cAAc,EAAE;AALV;AARV;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD;;GAvBuBX,M;;KAAAA,M","sourcesContent":["import React from \"react\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\nimport { useState, useEffect } from \"react\";\r\nexport default function Player({ accessToken, trackUri }) {\r\n  const [play, setPlay] = useState(false);\r\n  useEffect(() => setPlay(true), [trackUri]);\r\n  if (!accessToken) return null;\r\n\r\n  return (\r\n    <SpotifyPlayer\r\n      token={accessToken}\r\n      showSaveIcon\r\n      callback={(state) => {\r\n        if (!state.isPlaying) setPlay(false);\r\n      }}\r\n      play={play}\r\n      uris={trackUri ? [trackUri] : []}\r\n      styles={{\r\n        loaderSize: 10,\r\n        sliderHeight: 3,\r\n        sliderColor: \"#1cb954\",\r\n        trackArtistColor: \"#ccc\",\r\n        trackNameColor: \"#fff\",\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}